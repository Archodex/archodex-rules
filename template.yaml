Resources:
  USEast1StackSetExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ArchodexRulesUSEast1StackSetExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Ref AWS::AccountId
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/CrossRegionParameterCustomResourcesAdministratorAccess
      Policies:
        - PolicyName: ManageStacks
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:CancelUpdateStack
                  - cloudformation:ContinueUpdateRollback
                  - cloudformation:CreateChangeSet
                  - cloudformation:CreateStack
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:RollbackStack
                  - cloudformation:TagResource
                  - cloudformation:UntagResource
                  - cloudformation:UpdateStack
                Resource: !Sub arn:${AWS::Partition}:cloudformation:*:${AWS::AccountId}:stack/StackSet-${AWS::StackName}-us-east-1-*
        - PolicyName: ReadCrossRegionParameterCustomResourceTokenParameter
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: ssm:GetParameters
                Resource: !Sub arn:${AWS::Partition}:ssm:*:${AWS::AccountId}:parameter/cross_region_parameter_custom_resource_service_token
        - PolicyName: ManageACMCertificates
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - acm:AddTagsToCertificate
                  - acm:DeleteCertificate
                  - acm:DescribeCertificate
                  - acm:ListTagsForCertificate
                  - acm:RemoveTagsFromCertificate
                  - acm:RequestCertificate
                  - acm:UpdateCertificateOptions
                Resource: '*'
                Condition:
                  ForAllValues:StringEquals:
                    acm:DomainNames: 'rules.{{resolve:ssm:/account_subdomain/domain}}'
        - PolicyName: ManageACMRoute53Records
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: route53:ChangeResourceRecordSets
                Resource: !Sub arn:${AWS::Partition}:route53:::hostedzone/{{resolve:ssm:/account_subdomain/hosted_zone_id}}
                Condition:
                  ForAllValues:StringEquals:
                    route53:ResourceRecordSet: '*.rules.{{resolve:ssm:/account_subdomain/domain}}'
                  ForAllValues:StringEquals:
                    route53:ResourceRecordSetType: CNAME

  USEast1StackSetAdministrationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ArchodexRulesUSEast1StackSetAdministrationRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: !Sub cloudformation.${AWS::URLSuffix}
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref AWS::AccountId
              StringLike:
                aws:SourceArn: !Sub arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stackset/${AWS::StackName}-us-east-1:*
      Policies:
        - PolicyName: ExecuteStackSet
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: sts:AssumeRole
                Resource: !GetAtt USEast1StackSetExecutionRole.Arn

  USEast1Stack:
    Type: AWS::CloudFormation::StackSet
    Properties:
      AdministrationRoleARN: !GetAtt USEast1StackSetAdministrationRole.Arn
      ExecutionRoleName: !Ref USEast1StackSetExecutionRole
      ManagedExecution:
        Active: true
      OperationPreferences:
        FailureToleranceCount: 0
        MaxConcurrentCount: 1
        RegionConcurrencyType: PARALLEL
      Parameters:
        - ParameterKey: ParentStackName
          ParameterValue: !Ref AWS::StackName
        - ParameterKey: ParentStackRegion
          ParameterValue: !Ref AWS::Region
        - ParameterKey: Domain
          ParameterValue: '{{resolve:ssm:/account_subdomain/domain}}'
        - ParameterKey: HostedZoneId
          ParameterValue: '{{resolve:ssm:/account_subdomain/hosted_zone_id}}'
      PermissionModel: SELF_MANAGED
      StackInstancesGroup:
        - DeploymentTargets:
            Accounts:
              - !Ref AWS::AccountId
          Regions:
            - us-east-1
      StackSetName: !Sub ${AWS::StackName}-us-east-1
      TemplateBody: |-
        Parameters:
          ParentStackName:
            Type: String
            Description: Parent stack name
          ParentStackRegion:
            Type: String
            Description: Parent stack region
          Domain:
            Type: String
            Description: Archodex environment domain name
          HostedZoneId:
            Type: String
            Description: Archodex environment Route53 Hosted Zone ID

        Resources:
          Certificate:
            Type: AWS::CertificateManager::Certificate
            Properties:
              DomainName: !Sub rules.${Domain}
              ValidationMethod: DNS
              DomainValidationOptions:
                - DomainName: !Sub rules.${Domain}
                  HostedZoneId: !Ref HostedZoneId

          CertificateParameter:
            Type: Custom::CrossRegionSSMParameter
            Properties:
              # Use unicode character escape to prevent parent stack dynamic referencing
              ServiceToken: "{\u007Bresolve:ssm:/cross_region_parameter_custom_resource_service_token}}"
              ServiceTimeout: 10
              Region: !Ref ParentStackRegion
              Description: Archodex Rules us-east-1 ACM Certificate ARN
              Name: !Sub /${ParentStackName}/certificate
              Type: String
              Value: !Ref Certificate

  AssetsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-assets-${AWS::AccountId}
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  AssetsBucketPolicyRequireEncryptionInTransit:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref AssetsBucket
      PolicyDocument:
        Id: RequireEncryptionInTransit
        Version: '2012-10-17'
        Statement:
          - Principal: '*'
            Action: '*'
            Effect: Deny
            Resource:
              - !GetAtt AssetsBucket.Arn
              - !Sub ${AssetsBucket.Arn}/*
            Condition:
              Bool:
                aws:SecureTransport: 'false'

  AssetsBucketOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub ${AWS::StackName}-assets-access-control
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  DomainCertificateParameterValue:
    DependsOn: USEast1Stack
    Type: Custom::ParameterValue
    Properties:
      ServiceToken: '{{resolve:ssm:/parameter_value_custom_resource_service_token}}'
      ServiceTimeout: 5
      ParameterName: !Sub /${AWS::StackName}/certificate

  ResponseHeaderPolicy:
    Type: AWS::CloudFront::ResponseHeadersPolicy
    Properties:
      ResponseHeadersPolicyConfig:
        Name: !Ref AWS::StackName
        CustomHeadersConfig:
          Items:
            - Header: Cache-Control
              Override: true
              Value: max-age=31536000
            - Header: X-Robots-Tag
              Override: true
              Value: none, noimageindex
        SecurityHeadersConfig:
          ContentSecurityPolicy:
            ContentSecurityPolicy: default-src 'none'
            Override: true
          ContentTypeOptions:
            Override: true
          ReferrerPolicy:
            Override: true
            ReferrerPolicy: no-referrer
          StrictTransportSecurity:
            AccessControlMaxAgeSec: 63072000
            IncludeSubdomains: true
            Override: true
            Preload: true

  CloudFrontCachePolicyDisabledWithCompression:
    Type: AWS::CloudFront::CachePolicy
    Properties:
      CachePolicyConfig:
        Comment: Identical to managed CachingDisabled policy, but with compression enabled
        DefaultTTL: 1
        MaxTTL: 1
        MinTTL: 1
        Name: !Sub ${AWS::StackName}-caching-disabled-with-compression
        ParametersInCacheKeyAndForwardedToOrigin:
          CookiesConfig:
            CookieBehavior: none
          EnableAcceptEncodingBrotli: true
          EnableAcceptEncodingGzip: true
          HeadersConfig:
            HeaderBehavior: none
          QueryStringsConfig:
            QueryStringBehavior: none

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - 'rules.{{resolve:ssm:/account_subdomain/domain}}'
        CacheBehaviors:
          - AllowedMethods:
              - HEAD
              - GET
            CachedMethods:
              - HEAD
              - GET
            CachePolicyId: !Ref CloudFrontCachePolicyDisabledWithCompression
            Compress: true
            PathPattern: /versions.json
            ResponseHeadersPolicyId: !Ref ResponseHeaderPolicy
            TargetOriginId: AssetsBucket
            ViewerProtocolPolicy: redirect-to-https
          - AllowedMethods:
              - HEAD
              - GET
            CachedMethods:
              - HEAD
              - GET
            CachePolicyId: !Ref CloudFrontCachePolicyDisabledWithCompression
            Compress: true
            PathPattern: /dev/*
            ResponseHeadersPolicyId: !Ref ResponseHeaderPolicy
            TargetOriginId: AssetsBucket
            ViewerProtocolPolicy: redirect-to-https
        DefaultCacheBehavior:
          AllowedMethods:
            - HEAD
            - GET
          CachedMethods:
            - HEAD
            - GET
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6 # CachingOptimized
          Compress: true
          ResponseHeadersPolicyId: !Ref ResponseHeaderPolicy
          TargetOriginId: AssetsBucket
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2and3
        IPV6Enabled: true
        Origins:
          - Id: AssetsBucket
            DomainName: !GetAtt AssetsBucket.RegionalDomainName
            OriginAccessControlId: !GetAtt AssetsBucketOriginAccessControl.Id
            S3OriginConfig:
              OriginAccessIdentity: ''
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn: !Ref DomainCertificateParameterValue
          MinimumProtocolVersion: TLSv1.2_2021
          SslSupportMethod: sni-only

  AssetsBucketPolicyCloudFrontAccess:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref AssetsBucket
      PolicyDocument:
        Id: CloudFrontAccess
        Version: '2012-10-17'
        Statement:
          - Principal:
              Service: !Sub cloudfront.${AWS::URLSuffix}
            Action: s3:GetObject
            Effect: Allow
            Resource: !Sub ${AssetsBucket.Arn}/*
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub arn:${AWS::Partition}:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution.Id}
  
  DNSRecord:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: '{{resolve:ssm:/account_subdomain/hosted_zone_id}}'
      RecordSets:
        - Name: 'rules.{{resolve:ssm:/account_subdomain/domain}}'
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2 # Special CloudFront-specific ID
            DNSName: !GetAtt CloudFrontDistribution.DomainName
        - Name: 'rules.{{resolve:ssm:/account_subdomain/domain}}'
          Type: AAAA
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2 # Special CloudFront-specific ID
            DNSName: !GetAtt CloudFrontDistribution.DomainName